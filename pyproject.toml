[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "faculty-research-notifier"
version = "1.0.0"
description = "AI-driven multi-agent system connecting university faculty with relevant research funding opportunities"
authors = [
    {name = "Faculty Research Team", email = "research@university.edu"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "pydantic",
    "requests",
    "beautifulsoup4",
    "lxml",
    "pytest",
    "pytest-mock",
    "pytest-asyncio",
    "pyyaml",
    "tenacity",
    "jinja2",
    "matplotlib",
    "pandas",
    "google-generativeai",
    "prometheus-client",
    "prometheus-fastapi-instrumentator",
    "psutil",
]

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "flake8",
    "mypy",
    "pytest-cov",
    "pytest-xdist",
    "pre-commit",
    "bandit",
    "safety",
    "types-requests",
    "types-PyYAML",
]

[project.urls]
Homepage = "https://github.com/university/faculty-research-notifier"
Documentation = "https://github.com/university/faculty-research-notifier/docs"
Repository = "https://github.com/university/faculty-research-notifier.git"
"Bug Tracker" = "https://github.com/university/faculty-research-notifier/issues"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "agent: marks tests as agent-specific tests",
    "api: marks tests as API tests",
    "asyncio: marks tests as async tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/manage.py",
    "*/settings/*",
    "*/activate_this.py",
    "*/node_modules/*",
    "*/static/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

# Bandit security linting configuration
[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection for tests

# flake8 configuration (in setup.cfg format since flake8 doesn't support pyproject.toml)
# See .flake8 file or setup.cfg for flake8 configuration