{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(python -m pytest tests/ -v)",
      "Bash(pip install:*)",
      "Bash(python -m pytest tests/test_database_discovery_agent.py -v)",
      "Bash(python -m pytest tests/test_database_discovery_agent.py::TestDatabaseDiscoveryAgent::test_error_handling -v)",
      "Bash(find:*)",
      "Bash(# Step 3: Get current branch dynamically\nCURRENT_BRANCH=$(git branch --show-current)\necho \"\"üìç Current branch: $CURRENT_BRANCH\"\")",
      "Bash(# Step 4: Clean up any existing worktrees (for re-runs)\necho \"\"üßπ Cleaning up any existing worktrees...\"\"\ngit worktree remove ../research-notifier-dev 2>/dev/null || true\ngit worktree remove ../research-notifier-qa 2>/dev/null || true\ngit worktree remove ../research-notifier-devops 2>/dev/null || true\ngit worktree remove ../research-notifier-infra 2>/dev/null || true)",
      "Bash(# Step 5: Create fresh worktrees from CURRENT branch\necho \"\"üìÅ Creating git worktrees from branch: multiAgent_claudCode_setup...\"\"\ngit worktree add ../research-notifier-dev multiAgent_claudCode_setup\ngit worktree add ../research-notifier-qa multiAgent_claudCode_setup  \ngit worktree add ../research-notifier-devops multiAgent_claudCode_setup\ngit worktree add ../research-notifier-infra multiAgent_claudCode_setup)",
      "Bash(git worktree remove:*)",
      "Bash(true)",
      "Bash(git worktree:*)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(for:*)",
      "Bash(do echo \"  Copying to research-notifier-$worktree...\")",
      "Bash(cp:*)",
      "Bash(done)",
      "Bash(ls:*)",
      "Bash(python -m pytest tests/test_main.py -v)",
      "Bash(docker build:*)",
      "Bash(python -m pytest tests/core/test_models.py -v)",
      "Bash(python:*)",
      "Bash(chmod:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(pytest:*)",
      "Bash(timeout:*)"
    ],
    "deny": []
  }
}